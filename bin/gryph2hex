#!/usr/bin/php
<?php
require_once dirname(__FILE__) . "/../lib/defines.php";

/*
 * globals
 */

$gryph_dir = "";
$block_filename = "";
$block_data = null;

/*
 * functions
 */

function read_gryph ($dir, $index, $name)
{
	$result = null;

	$handle = @opendir($dir);
	if (!$handle) {
		fwrite(STDERR, sprintf(
			"cannot open gryph directory: %s\n",
			$dir));
		return $result;
	}

	$subdirs = array();
	while (($file = readdir($handle)) !== false) {
		if ($file == "." || $file == "..") continue;
		if (!preg_match('/^\d+/', $file)) continue;
		if (!is_dir($dir . "/" . $file)) continue;

		$subdirs[] = $dir . "/" . $file;
	}
	closedir($handle);
	sort($subdirs);

	foreach ($subdirs as $subdir) {
		$filename = $subdir . "/" . get_gryph_filename($index, $name);

		if (!file_exists($filename)) {
			continue;
		}

		if (!$result) {
			$result = ImageCreateFromPng($filename);
		}
		else {
			$tmp = ImageCreateFromPng($filename);

			if (!ImageIsTrueColor($tmp)) {
				continue;
			}
			if (ImageSx($result) != ImageSx($tmp)) {
				continue;
			}
			if (ImageSy($result) != ImageSy($tmp)) {
				continue;
			}

			ImageCopy(
				$result, $tmp,
				0, 0, 0, 0, ImageSx($tmp), ImageSy($tmp));
			ImageDestroy($tmp);
		}
	}

	return $result;
}

function read_pixels ()
{
	global $gryph_dir, $block_data;

	$result = array();

	foreach ($block_data as $block_index => $block) {
		$from = $block["from"];
		$to = $block["to"];
		$range = $to - $from + 1;
		$prev_total = count($result);
		$canvas = read_gryph($gryph_dir, $block_index, $block["name"]);

		if (!$canvas) {
			fwrite(
				STDERR,
				sprintf("*** missing: %04X-%04X, %5d code points: %s ***\n",
					$from, $to, $range, $block["name"]));
			continue;
		}

		for ($i = $from; $i <= $to; $i++) {
			$x = ($i - $from) % GRID_HORZ_COUNT;
			$y = floor(($i - $from) / GRID_HORZ_COUNT);
			$px = ($x + 1) * CELL_WIDTH + CELL_MARGIN;
			$py = ($y + 1) * CELL_HEIGHT + CELL_MARGIN;
			$data = array();

			$upright = ImageColorAt(
				$canvas,
				$px + FONT_WIDTH * 2 - 1, $py) & 0x00ffffff;

			if ($upright != 0 && $upright != 0x00ffffff) {
				for ($y = 0; $y < FONT_HEIGHT; $y++) {
					$bits = 0;
					for ($x = 0; $x < FONT_WIDTH; $x++) {
						$col = ImageColorAt(
							$canvas, $px + $x, $py + $y);
						$bits <<= 1;
						$bits |= $col == 0 ? 1 : 0;
					}
					$data[] = $bits;
				}
			}
			else {
				for ($y = 0; $y < FONT_HEIGHT; $y++) {
					$bits = 0;
					for ($x = 0; $x < FONT_WIDTH; $x++) {
						$col = ImageColorAt(
							$canvas, $px + $x, $py + $y);
						$bits <<= 1;
						$bits |= $col == 0 ? 1 : 0;
					}
					$data[] = $bits;

					$bits = 0;
					for ($x = 0; $x < FONT_WIDTH; $x++) {
						$col = ImageColorAt(
							$canvas, $px + FONT_WIDTH + $x, $py + $y);
						$bits <<= 1;
						$bits |= $col == 0 ? 1 : 0;
					}
					$data[] = $bits;
				}
			}

			$result[$i] = sprintf("%04X:%s\n", $i, array2hex($data));
		}

		fwrite(
			STDERR,
			sprintf("%04X-%04X, %5d (%5d) code points: %s\n",
				$from, $to, $range, count($result) - $prev_total, $block["name"]));
	}

	return $result;
}

function output ($hex)
{
	foreach ($hex as $line) {
		echo $line;
	}
}

/*
 * app utils
 */

function parse_arg ()
{
	global $argv;
	global $gryph_dir, $block_filename;

	$result = true;
	$tmpargv = $argv;
	array_shift($tmpargv);

	foreach ($tmpargv as $arg) {
		if (preg_match('/^--gryph=(.+)$/', $arg, $re)) {
			$gryph_dir = $re[1];
		}
		else if (preg_match('/^--block=(.+)$/', $arg, $re)) {
			$block_filename = $re[1];
		}
		else {
			$result = false;
		}
	}

	return $result;
}

function print_help ()
{
	global $argv;

	fwrite(STDERR, <<<_END_
{$argv[0]}: convert ufo gryph image to unifont hex data

	--gryph=<path/to/gryph/images/dir>
	--block=<path/to/Blocks.txt>


_END_
);
}

/*
 * entry point
 */

try {
	$argv[0] = basename($argv[0]);
	if (!parse_arg()) {
		print_help();
		exit(1);
	}

	if ($gryph_dir == "") {
		fwrite(STDERR, "{$argv[0]}: missing gryph dir.\n");
		exit(1);
	}

	if ($block_filename == "") {
		fwrite(STDERR, "{$argv[0]}: missing Block.txt.\n");
		exit(1);
	}

	fwrite(STDERR, "     gryph dir: " . $gryph_dir . "\n");
	fwrite(STDERR, "block_filename: " . $block_filename . "\n");
	fwrite(STDERR, "\n");

	$block_data = read_block($block_filename);

	$hex = read_pixels();
	if (count($hex) != BMP_CODEPOINTS) {
		fwrite(STDERR, sprintf(
			"%s: invalid code point count of pixel data: %d (%d)\n",
			$argv[0], count($hex), BMP_CODEPOINTS - count($hex)));
		exit(1);
	}
	else {
		fwrite(STDERR, sprintf("there are %d code points.\n", count($hex)));
	}

	output($hex);
}
catch (Exception $e) {
	fwrite(STDERR, "{$argv[0]}: Exception: " . $e->getMessage() . "\n");
	exit(1);
}
